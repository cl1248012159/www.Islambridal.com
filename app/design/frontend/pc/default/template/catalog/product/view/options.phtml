
<?php $_options = Mage::helper('core')->decorateArray($this->getOptions()) ?>
<?php if (count($_options)):?>
    <script type="text/javascript">
    //<![CDATA[
    var optionFileUpload = {
        productForm : $('product_addtocart_form'),
        formAction : '',
        formElements : {},
        upload : function(element){
            this.formElements = this.productForm.select('input', 'select', 'textarea', 'button');
            this.removeRequire(element.readAttribute('id').sub('option_', ''));

            template = '<iframe id="upload_target" name="upload_target" style="width:0; height:0; border:0;"><\/iframe>';

            Element.insert($('option_'+element.readAttribute('id').sub('option_', '')+'_uploaded_file'), {after: template});

            this.formAction = this.productForm.action;

            var baseUrl = '<?php echo $this->getUrl('*/product/upload') ?>';
            var urlExt = 'option_id/'+element.readAttribute('id').sub('option_', '');

            this.productForm.action = parseSidUrl(baseUrl, urlExt);
            this.productForm.target = 'upload_target';
            this.productForm.submit();
            this.productForm.target = '';
            this.productForm.action = this.formAction;
        },
        removeRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('id') != 'option_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='disabled';
                }
            }
        },
        addRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('name') != 'options_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='';
                }
            }
        },
        uploadCallback : function(data){
            this.addRequire(data.optionId);
            $('upload_target').remove();

            if (data.error) {

            } else {
                $('option_'+data.optionId+'_uploaded_file').value = data.fileName;
                $('option_'+data.optionId+'_file').value = '';
                $('option_'+data.optionId+'_file').hide();
                $('option_'+data.optionId+'').hide();
                template = '<div id="option_'+data.optionId+'_file_box"><a href="#"><img src="var/options/'+data.fileName+'" alt=""><\/a><a href="#" onclick="optionFileUpload.removeFile('+data.optionId+')" title="Remove file" \/>Remove file<\/a>';

                Element.insert($('option_'+data.optionId+'_uploaded_file'), {after: template});
            }
        },
        removeFile : function(optionId)
        {
            $('option_'+optionId+'_uploaded_file').value= '';
            $('option_'+optionId+'_file').show();
            $('option_'+optionId+'').show();

            $('option_'+optionId+'_file_box').remove();
        }
    }
    var optionTextCounter = {
        count : function(field,cntfield,maxlimit){
            if (field.value.length > maxlimit){
                field.value = field.value.substring(0, maxlimit);
            } else {
                cntfield.innerHTML = maxlimit - field.value.length;
            }
        }
    }

    Product.Options = Class.create();
    Product.Options.prototype = {
        initialize : function(config) {
            this.config = config;
            this.reloadPrice();
            document.observe("dom:loaded", this.reloadPrice.bind(this));
        },
        reloadPrice : function() {
            var config = this.config;
            var skipIds = [];
            $$('body .product-custom-option').each(function(element){
                var optionId = 0;
                element.name.sub(/[0-9]+/, function(match){
                    optionId = parseInt(match[0], 10);
                });
                if (config[optionId]) {
                    var configOptions = config[optionId];
                    var curConfig = {price: 0};
                    if (element.type == 'checkbox' || element.type == 'radio') {
                        if (element.checked) {
                            if (typeof configOptions[element.getValue()] != 'undefined') {
                                curConfig = configOptions[element.getValue()];
                            }
                        }
                    } else if(element.hasClassName('datetime-picker') && !skipIds.include(optionId)) {
                        dateSelected = true;
                        $$('.product-custom-option[id^="options_' + optionId + '"]').each(function(dt){
                            if (dt.getValue() == '') {
                                dateSelected = false;
                            }
                        });
                        if (dateSelected) {
                            curConfig = configOptions;
                            skipIds[optionId] = optionId;
                        }
                    } else if(element.type == 'select-one' || element.type == 'select-multiple') {
                        if ('options' in element) {
                            $A(element.options).each(function(selectOption){
                                if ('selected' in selectOption && selectOption.selected) {
                                    if (typeof(configOptions[selectOption.value]) != 'undefined') {
                                        curConfig = configOptions[selectOption.value];
                                    }
                                }
                            });
                        }
                    } else {
                        if (element.getValue().strip() != '') {
                            curConfig = configOptions;
                        }
                    }
                    if(element.type == 'select-multiple' && ('options' in element)) {
                        $A(element.options).each(function(selectOption) {
                            if (('selected' in selectOption) && typeof(configOptions[selectOption.value]) != 'undefined') {
                                if (selectOption.selected) {
                                    curConfig = configOptions[selectOption.value];
                                } else {
                                    curConfig = {price: 0};
                                }
                                optionsPrice.addCustomPrices(optionId + '-' + selectOption.value, curConfig);
                                optionsPrice.reload();
                            }
                        });
                    } else {
                        optionsPrice.addCustomPrices(element.id || optionId, curConfig);
                        optionsPrice.reload();
                    }
                }
            });
        }
    }
    function validateOptionsCallback(elmId, result) {
        var container = $(elmId).up('ul.options-list');
        if (result == 'failed') {
            container.removeClassName('validation-passed');
            container.addClassName('validation-failed');
        } else {
            container.removeClassName('validation-failed');
            container.addClassName('validation-passed');
        }
    }
    var opConfig = new Product.Options(<?php echo $this->getJsonConfig() ?>);
    //]]>
    </script>






    <div class="product_customer_options">
        <script src="<?php echo $this->getUrl()?>js/jQuery/jquery.jCal.min.js"></script>
        <?php
            $size_custom = '';
            foreach($_options as $_option_size){
                switch($this->htmlEscape($_option_size->getTitle())){
                    case 'Bust':
                    case 'Waist':
                    case 'Hips':
                    case 'Hollow to Floor':
                    case 'Height':
                    case 'Item Remarks':
                        $size_custom .= $this->getOptionHtml($_option_size);
                        break;
                }
            }
            $size_custom .= '<div class="measurements">
                    <div class="cusbox customHide" id="oc_content">
                        <dl class="ocdl br5p">
                            <dt><span class="co">Custom Options</span>
                            <div>
                                Dreaming of perfect fitting?You just need to pay extra<span class="fuhao">USD $</span><span id="custom_Cprice_Top" data-price="0" class="F39 huobi">19.99</span> ,our professional tailors  will make the dress custom size according to your exact measurements.
                            </div>
                            </dt>
                            <dd class="co_main co_wedding">
                                <div class="posidiv bust"><span class="bwhh">Bust</span>Measure across the back and fullest part of the bust (not under the bust).</div>
                                <div class="posidiv waist"><span class="bwhh">Waist</span>Bend to one side to find the crease or natural waist. Measure across the narrowest part.</div>
                                <div class="posidiv hips"><span class="bwhh">Hips</span>Standing with feet together, measure at the fullest part of the hips.</div>
                                <div class="posidiv hollow"><span class="bwhh">Hollow to Floor</span>Measure from the center of the collarbone (Hollow) to the floor.<br>Note: Stand straight with feet together, and measure in bare feet.</div>
                            </dd>

                        </dl>
                    </div>
                </div>';
        ?>
        <?php foreach($_options as $_option): ?>
            <?php
                $data_title = $this->htmlEscape($_option->getTitle());

                switch($this->htmlEscape($_option->getTitle())){
                    case 'Time':
                        echo '<dl data-title="'.$data_title.'">';
                        echo $this->getOptionHtml($_option);
                        echo '<div class="jCalcontainer">
                                    <div id="container">
                                        <div id="calendar"></div>
                                    </div>
                                </div>';
                        echo '</dl>';
                        break;
                    case 'Time For Admin':
                    case 'Color':
                        echo '<dl data-title="'.$data_title.'">';
                        echo $this->getOptionHtml($_option);
                        echo '</dl>';
                        break;
                    case 'Size':
                        echo '<dl data-title="'.$data_title.'">';
                        echo $this->getOptionHtml($_option);
                        echo '<div class="custom_size Size no-display">';
                        echo $size_custom;
                        echo '</div>';
                        echo '</dl>';
                        break;

                }
            ?>
        <?php endforeach; ?>
    </div>









<?php endif; ?>


<script type="text/javascript">
    jQuery('input[data-title="Time"]').prop('readonly',true);



    jQuery("doucument").ready(function(){


        jQuery('div[data-title="Time For Admin"] select option').each(function(){
            if(jQuery(this).attr('value')){
                var discount = {};
                discount.input_date_arr = jQuery(this).attr('title').replace(/ Days/,'').split("-");
                discount.input_pricetype = jQuery(this).attr('pricetype');
                discount.priceinput = jQuery(this).attr('priceinput');
                discount.timeforadmin_value = jQuery(this).attr('value');
                //console.log(discount);
                if(discount.input_date_arr.length>1){
                    var start = discount.input_date_arr[0]-6;
                    var end = discount.input_date_arr[1]-6;
                    var price_formart = '';
                    if(parseInt(discount.priceinput)){
                        price_formart = (discount.input_pricetype=='fixed'?'$':'')+parseInt(discount.priceinput)+(discount.input_pricetype=='percent'?'%':'');
                    }
                    for(var i= start; i<=end; i++ ){
                        jQuery(".day").eq(i-1).append("<span class='F39' data-timeforadmin_value='"+discount.timeforadmin_value+"'>"+price_formart+"</span>");
                    }
                }else{
                    var start = discount.input_date_arr[0]-6;
                    var price_formart = '';
                    if(parseInt(discount.priceinput)){
                        price_formart = (discount.input_pricetype=='fixed'?'$':'')+parseInt(discount.priceinput)+(discount.input_pricetype=='percent'?'%':'');
                    }
                    jQuery(".day").eq(start-1).append("<span class='F39' data-timeforadmin_value='"+discount.timeforadmin_value+"'>"+price_formart+"</span>");
                }

            }
        });








        jQuery(".product-custom-option").each(function(){
            var id = jQuery(this).attr("id");

            var maxIndex = jQuery("#"+id+" option:last").prop("index");
            var id_arr = id.split('_');
            var attribute = jQuery("#"+id_arr[1]).val();


            jQuery(this).change(function(){
                var checkText = jQuery(this).find("option:selected").text();
                var checkIndex=jQuery(this).get(0).selectedIndex;
                if(checkIndex == maxIndex)
                {
                    if(jQuery(".insert_US")){
                        jQuery(".insert_US").remove();
                    }
                    jQuery("."+attribute).show();
                }
                else
                {
                    jQuery("."+attribute).hide();

                    if( jQuery(this).parent().data('title') == 'Size'){
                        var us_value ;
                        if( checkText.indexOf("+")>-1 ){
                            us_value = checkText.substring( 0, checkText.indexOf("+") )
                        }else{
                            us_value = checkText;
                        }
                        us_value_key = jQuery.trim(us_value.replace(' ',''));
                        jQuery(this).parent().append(us_template(us_value , us_obj[us_value_key] ));
                    }
                }
            });
        });

        function us_template(us_value,us_obj){
            if(jQuery(".insert_US")){
                jQuery(".insert_US").remove();
            }
            var template = '<div class="insert_US">';
                template += '<p class="infomation">Islambridal of size <i class="num nomalnum"> '+us_value+' </i> will be made according to the</p>';
                template += '<ul class="compare">';
                jQuery.each(us_obj,function(n,value){
                    template += '<li>';
                    template += '<span class="title">'+n+'</span>';
                    template += '<span class="value">='+value.inch+' inch ('+value.cm+'cm)</span>';
                    template += '</li>';
                });

                template += '</ul>';
                template += '<div class="infomations2">To fit heels,we\'ll add extra 8-13cm onto floor-length dresses.<div class="sizeimage"></div></div>'
                template += '</div>';

            return template;
        }

        jQuery("#setunit").on('change',function(){
            var unit = jQuery(this).val();
            jQuery(".size_"+unit).prop('disabled',false).show();
            jQuery(".size_"+unit).siblings("select").prop('disabled',true).hide();
        });

        if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {
            //手机端
            jQuery('dl[data-title="Time"] .input-box').bind("click",function(){
                jQuery('.jCalcontainer').show();
            });
        }else{
            //pc端
            jQuery('dl[data-title="Time"] .input-box , .jCalcontainer').mouseover(function(){
                jQuery('.jCalcontainer').show();
            });
            jQuery('dl[data-title="Time"] .input-box , .jCalcontainer').mouseout(function(){
                jQuery('.jCalcontainer').hide();
            });
        }



        jQuery("#container").on('click touchstart','.day',function(e){
            var e_target = jQuery(e.target);
            if( e_target.hasClass('day') ){
                var timeforadmin_value = e_target.find('span').data('timeforadmin_value');
            }else if( e_target.hasClass('F39') ){
                var timeforadmin_value = e_target.data('timeforadmin_value');
            }
            jQuery('.input-box[data-title="Time For Admin"] select').find('option[value="'+timeforadmin_value+'"]').prop('selected',true);
            jQuery('.input-box[data-title="Time For Admin"] select').trigger("change");
            //jQuery('.jCalcontainer').hide();
        });


    });
</script>
